#!/usr/bin/python

from ConfigParser import SafeConfigParser,NoOptionError,NoSectionError
from apiclient import ApiClient,ToodledoError
from getpass import getpass
from lexer import parse
from optparse import OptionParser
from os.path import expanduser
from sys import argv,exit
import readline

usage = '''Enter a task and associated metadata:

context: @<context>
due date: #<date>; toodledo parses dates smartly, including "#next thursday", and email does consume the space after #next as part of the date
due time: =<time>; translates time smartly
folder: *<name>
goal: +<goal>
length: ~<time>; like "~4hours"
location: -<location>
note: ?<note data>
priority: default is zero; single ! = 1, !! = 2, !!! = 3 (top)
reminder: :<lead time>; ":5 hours"
repeat: &<schedule>
star: * alone makes the task starred
start date: ><date> (&lt;)
start time: ^<time>
status: $<status>
tag: %<tag>; can select multiple with "%tag1, tag2"
'''

def read_or_get_creds(config):
    username = ""
    password = ""

    try:
        username = config.get('config', 'username')
        password = config.get('config', 'password')
    except (NoOptionError, NoSectionError):
        print "Please enter your login credentials."
        username = raw_input("Username: ")
        password = getpass("Password: ")

    return (username, password)


if __name__ == '__main__':
    parser = OptionParser(usage = "usage: %prog <task description>")
    parser.add_option("-l", "--list", action="store_true", dest="show_tasks", default=False,
                      help="Show unfinished tasks")
    (options, args) = parser.parse_args()

    configfile = expanduser('~/.tdclirc')
    config = SafeConfigParser()
    config.read(configfile)

    client = ApiClient()
    try:
        client._key = config.get('session', 'key')
        client.getAccountInfo()

    except (NoSectionError, NoOptionError, ToodledoError):
        # cached session key either wasn't there or wasn't good; get a new one and cache it
        client._key = None
        (username, password) = read_or_get_creds(config)

        try:
            client.authenticate(username, password)
        except ToodledoError as e:
            print "No login credentials were successful; please try again."
            raise e

        if not config.has_section('session'):
            config.add_section('session')

        config.set('session', 'key', client.key)
        cfile = open(configfile, 'w')
        config.write(cfile)
        cfile.close()

    if options.show_tasks:
        tasks = [str(x.title) for x in reversed(client.getTasks(comp=False))]
        for item in tasks: print "* " + item
        exit(0)
    elif len(argv) > 1:
        r = ' '.join(argv[1:])
    else:
        print usage
        r = raw_input("Enter a task description: ")
    task = parse(r)
    client.addTask(**task)

    print
    print client.getTask(task['title'])
